Index: firefox-92.0/browser/app/profile/firefox.js
===================================================================
--- firefox-92.0.orig/browser/app/profile/firefox.js
+++ firefox-92.0/browser/app/profile/firefox.js
@@ -36,12 +36,19 @@ pref("extensions.webextOptionalPermissio
 pref("extensions.postDownloadThirdPartyPrompt", true);
 
 // Preferences for AMO integration
-pref("extensions.getAddons.cache.enabled", true);
+/* MagIns - When enabled, the browser does a daily ping to Mozilla, sending information about installed add-ons
+            and returning updated metadata (screenshots, ratings, descriptions) about your add-ons
+pref("extensions.getAddons.cache.enabled", true);*/
+pref("extensions.getAddons.cache.enabled", false);
 pref("extensions.getAddons.get.url", "https://services.addons.mozilla.org/api/v4/addons/search/?guid=%IDS%&lang=%LOCALE%");
 pref("extensions.getAddons.search.browseURL", "https://addons.mozilla.org/%LOCALE%/firefox/search?q=%TERMS%&platform=%OS%&appver=%VERSION%");
 pref("extensions.getAddons.link.url", "https://addons.mozilla.org/%LOCALE%/firefox/");
 pref("extensions.getAddons.langpacks.url", "https://services.addons.mozilla.org/api/v4/addons/language-tools/?app=firefox&type=language&appversion=%VERSION%");
-pref("extensions.getAddons.discovery.api_url", "https://services.addons.mozilla.org/api/v4/discovery/?lang=%LOCALE%&edition=%DISTRIBUTION%");
+/* MagIns - Mozilla provides addon recommendations, returned by a ping to the below URL. In addition to the two
+            parameters below, the user's telemetry client ID is added as a parameter if users have telemetry
+            enabled (which is on by default in Firefox).
+pref("extensions.getAddons.discovery.api_url", "https://services.addons.mozilla.org/api/v4/discovery/?lang=%LOCALE%&edition=%DISTRIBUTION%");*/
+pref("extensions.getAddons.discovery.api_url", "");
 
 // The URL for the privacy policy related to recommended extensions.
 pref("extensions.recommendations.privacyPolicyUrl", "https://www.mozilla.org/privacy/firefox/?utm_source=firefox-browser&utm_medium=firefox-browser&utm_content=privacy-policy-link#addons");
@@ -1395,7 +1402,11 @@ pref("browser.menu.showCharacterEncoding
 // This is a fallback value for when prompt callers do not specify a modalType.
 pref("prompts.defaultModalType", 3);
 
-pref("browser.topsites.useRemoteSetting", true);
+/* MagIns - Firefox presents sponsored websites as "Top Sites", the list of which is
+            maintained by Remote Settings. We don't want sponsored sites, so don't
+            bother fetching them.
+pref("browser.topsites.useRemoteSetting", true);*/
+pref("browser.topsites.useRemoteSetting", false);
 // Fetch sponsored Top Sites from Mozilla Tiles Service (Contile)
 pref("browser.topsites.contile.enabled", true);
 pref("browser.topsites.contile.endpoint", "https://contile.services.mozilla.com/v1/tiles");
@@ -1447,7 +1458,11 @@ pref("browser.newtabpage.activity-stream
 // This url, if changed, MUST continue to point to an https url. Pulling arbitrary content to inject into
 // this page over http opens us up to a man-in-the-middle attack that we'd rather not face. If you are a downstream
 // repackager of this code using an alternate snippet url, please keep your users safe
-pref("browser.newtabpage.activity-stream.asrouter.providers.snippets", "{\"id\":\"snippets\",\"enabled\":false,\"type\":\"remote\",\"url\":\"https://snippets.cdn.mozilla.net/%STARTPAGE_VERSION%/%NAME%/%VERSION%/%APPBUILDID%/%BUILD_TARGET%/%LOCALE%/%CHANNEL%/%OS_VERSION%/%DISTRIBUTION%/%DISTRIBUTION_VERSION%/\",\"updateCycleInMs\":14400000}");
+/* MagIns - Snippets are small banners on the Home page provided by Mozilla to give tips about Firefox.
+            The snippets content depend on version, OS, build, update channel, etc., thus sending breadcrumbs
+            about your computer to Mozilla.
+pref("browser.newtabpage.activity-stream.asrouter.providers.snippets", "{\"id\":\"snippets\",\"enabled\":false,\"type\":\"remote\",\"url\":\"https://snippets.cdn.mozilla.net/%STARTPAGE_VERSION%/%NAME%/%VERSION%/%APPBUILDID%/%BUILD_TARGET%/%LOCALE%/%CHANNEL%/%OS_VERSION%/%DISTRIBUTION%/%DISTRIBUTION_VERSION%/\",\"updateCycleInMs\":14400000}");*/
+pref("browser.newtabpage.activity-stream.asrouter.providers.snippets", "{\"id\":\"snippets\",\"enabled\":true,\"type\":\"remote\",\"url\":\"\",\"updateCycleInMs\":14400000}");
 pref("browser.newtabpage.activity-stream.asrouter.providers.messaging-experiments", "{\"id\":\"messaging-experiments\",\"enabled\":true,\"type\":\"remote-experiments\",\"messageGroups\":[\"cfr\",\"whats-new-panel\",\"moments-page\",\"cfr-fxa\",\"aboutwelcome\",\"infobar\"],\"updateCycleInMs\":3600000}");
 
 // ASRouter user prefs
@@ -1689,23 +1704,31 @@ pref("browser.translation.ui.show", fals
 pref("browser.translation.engine", "Google");
 
 // Telemetry settings.
-// Determines if Telemetry pings can be archived locally.
-pref("toolkit.telemetry.archive.enabled", true);
-// Enables sending the shutdown ping when Firefox shuts down.
-pref("toolkit.telemetry.shutdownPingSender.enabled", true);
+/* MagIns - Determines if Telemetry pings can be archived locally.
+pref("toolkit.telemetry.archive.enabled", true);*/
+pref("toolkit.telemetry.archive.enabled", false);
+/* MagIns - Enables sending the shutdown ping when Firefox shuts down.
+pref("toolkit.telemetry.shutdownPingSender.enabled", true);*/
+pref("toolkit.telemetry.shutdownPingSender.enabled", false);
 // Enables sending the shutdown ping using the pingsender from the first session.
 pref("toolkit.telemetry.shutdownPingSender.enabledFirstSession", false);
-// Enables sending a duplicate of the first shutdown ping from the first session.
-pref("toolkit.telemetry.firstShutdownPing.enabled", true);
-// Enables sending the 'new-profile' ping on new profiles.
-pref("toolkit.telemetry.newProfilePing.enabled", true);
-// Enables sending 'update' pings on Firefox updates.
-pref("toolkit.telemetry.updatePing.enabled", true);
-// Enables sending 'bhr' pings when the browser hangs.
-pref("toolkit.telemetry.bhrPing.enabled", true);
+/* MagIns - Enables sending a duplicate of the first shutdown ping from the first session.
+pref("toolkit.telemetry.firstShutdownPing.enabled", true);*/
+pref("toolkit.telemetry.firstShutdownPing.enabled", false);
+/* MagIns - Enables sending the 'new-profile' ping on new profiles.
+pref("toolkit.telemetry.newProfilePing.enabled", true);*/
+pref("toolkit.telemetry.newProfilePing.enabled", false);
+/* MagIns - Enables sending 'update' pings on Firefox updates.
+pref("toolkit.telemetry.updatePing.enabled", true);*/
+pref("toolkit.telemetry.updatePing.enabled", false);
+/* MagIns - Enables sending 'bhr' pings when the browser hangs.
+pref("toolkit.telemetry.bhrPing.enabled", true);*/
+pref("toolkit.telemetry.bhrPing.enabled", false);
 
 // Ping Centre Telemetry settings.
-pref("browser.ping-centre.telemetry", true);
+/* MagIns
+pref("browser.ping-centre.telemetry", true);*/
+pref("browser.ping-centre.telemetry", false);
 pref("browser.ping-centre.log", false);
 
 // Enable GMP support in the addon manager.
@@ -2533,7 +2556,11 @@ pref("first-startup.timeout", 30000);
 // The agent still runs as scheduled if this pref is disabled,
 // but it exits immediately before taking any action.
 #ifdef XP_WIN
-  pref("default-browser-agent.enabled", true);
+/* MagIns - When true, a scheduled task is added to Windows during browser
+            installation. This task checks what the OS has set as the default
+            browser and sends this information to Mozilla.
+  pref("default-browser-agent.enabled", true);*/
+  pref("default-browser-agent.enabled", false);
 #endif
 
 // Test Prefs that do nothing for testing
@@ -2561,3 +2588,134 @@ pref("svg.context-properties.content.all
 #ifdef NIGHTLY_BUILD
   pref("extensions.translations.disabled", true);
 #endif
+
+/* MagIns - The browser milestone records the version number of the last successful
+            startup. After updates/upgrades, the user's homepage is changed to show
+            a promotional page about the update. Setting this to "ignore", the value
+            is never updated.*/
+pref("browser.startup.homepage_override.mstone", "ignore");
+
+/* MagIns - Like the mstone, the build ID is changed after updates. This ID is a
+            timestamp of the build, YYYYMMDDHHMMSS*/
+"browser.startup.homepage_override.buildID" = "";
+
+/* MagIns - The browser.contentblocking.category preference is Mozilla's Enhanced
+            Tracking Protection feature. This is visible to users in the
+            about:preferences page. By default, it is set to standard.*/
+pref("browser.contentblocking.category", "strict");
+
+/* MagIns - When true, Enhanced Tracking Protection will block tracking content in
+            all windows. When false, these protections only apply to private windows.
+            Due to the "Custom" option for ETP, there is some overlap between this
+            preference and browser.contentblocking.category: Standard applies to
+            private windows, Strict applies to all.*/
+pref("privacy.trackingprotection.enabled", true);
+
+/* MagIns - When true, Enhanced Tracking Protection will block social media trackers.
+            Due to the "Custom" option for ETP, there is some overlap between this
+            preference and browser.contentblocking.category: Standard and Strict both
+            block social media trackers, but Custom has an option to allow them.*/
+pref("privacy.trackingprotection.socialtracking.enabled", true);
+
+/* MagIns - The EFF's Do Not Track policy outlines how websites can maintain user
+            privacy, by removing tracking data from users that include a Do Not track
+            header in HTTP requests. Since the burden of implementing DNT is on websites,
+            the header is best used in conjunction with tools like PrivacyBadger, which
+            blocks tracking content from sites that do not respect DNT. Firefox by
+            default does not send a DNT header, so even sites that do respect DNT are
+            permitted to track users.*/
+pref("privacy.donottrackheader.enabled", true);
+
+/* MagIns - With geolocation enabled, websites are allowed to ask for your location.
+            When this preference is set to false, no prompt is shown to the user.*/
+pref("geo.enabled", false);
+
+/* MagIns - The media.navigator.enabled preference allows WebRTC to access the name
+            of devices*/
+pref("media.navigator.enabled", false);
+
+//This preference determines when cookies are deleted. Here are the different
+//options:
+//0 = Accept cookies normally
+//1 = Prompt for each cookie
+//2 = Accept for current session only
+//3 = Accept for N days
+pref("network.cookie.lifetimePolicy", 2);
+
+/* MagIns - Link prefetching allows browsers to load resources ahead of time that users
+            are likely to need, based on rel="prefetch" parameter in HTML pages. While
+            this can improve performance if the resource is accessed, it also creates a
+            privacy leak by automatically connecting users to servers. Firefox sets this
+            to true by default.*/
+pref("network.prefetch-next", false);
+
+/* MagIns - This preference enables several different privacy protections, as part
+            of Firefox's TOR Uplift project. These include:
+                Blocking canvas image extraction
+                Obscuring absolute screen coordinates
+                Window dimensions rounded to multiple of 200x100
+                Time precision reduced and jitter added
+                WebGL is limited
+                Spoofed keyboard layout
+                Locale spoofed to en-US
+                Timezone spoofed as UTC
+                Various APIs disabled
+            The umbrella preference defaults to false on Firefox, but there are
+            individual preferences for timing precision and canvas image extraction
+            protections, both of which are enabled by default
+            (privacy.resistFingerprinting.reduceTimerPrecision and
+            privacy.resistFingerprinting.autoDeclineNoUserInputCanvasPrompts, respectively).*/
+pref("privacy.resistFingerprinting", true);
+
+//Setting this preference to false will disable data sharing with Firefox for
+//Android
+pref("toolkit.telemetry.enabled", false);
+
+/* MagIns - WebGL is a JavaScript API conforming closely to OpenGL, thus allowing the API
+            to use hardware acceleration with a user's GPU. It also creates a fingerprint
+            based on monitor resolution and graphics card capabilities, which can be used
+            to track users. For privacy, we disable WebGL.*/
+pref("webgl.disabled", true);
+
+/* MagIns - This preference enables the Navigator.sendBeacon() function. This function transmits
+            a small bit of data over HTTP for analytics and diagnostics, usually when the user
+            leaves a page. Firefox sets this to true by default.*/
+pref("beacon.enabled", false);
+
+/* MagIns - When users navigate via links, a 'referer' header is added to the HTTP request to
+            indicate which site the user came from. This has many security and privacy concerns.
+            By default, Firefox sets this preference to 0, or "always send." We set it to 1, or
+            "send only if base domains match."*/
+pref("network.http.referer.XOriginPolicy", 1);
+
+/* MagIns - The Sensors API exposes physical sensors, such as motion, ambient light, or device
+            orientation, to the web. These sensors can be used to track behavior, including
+            typing patterns on bank PINs (see here: https://blog.lukaszolejnik.com/additional-security-and-privacy-risks-of-light-sensors/),
+            or discover a user's location. By default, Firefox disables the proximity and ambient
+            light sensors, and enables motion and orientation sensors. We disable all sensors.*/
+pref("device.sensors.enabled", false);
+
+/* MagIns - The Battery Status API can be used to determine charge level and discharge time.
+            This information can be used to create tracking identifiers of users or
+            distinguish devices behind a NAT. Firefox removed access to this API for websites
+            in Firefox 52 because of these privacy concerns, but continues to enable the API
+            for the browser itself.*/
+pref("dom.battery.enabled", false);
+
+/* MagIns - When enabled, this preference allows notifications to be sent when a user copies,
+            pastes, or cuts something from a webpage. Firefox enables this by default.*/
+pref("dom.event.clipboardevents.enabled", false);
+
+/* MagIns - By default, Firefox is allowed to install features and tools to your browser through
+            studies. Users are often enrolled automatically, only prompted for participation when
+            the study exceeds the default data collection policy.*/
+pref("app.shield.optoutstudies.enabled", false);
+
+//The resolver mode. You should not change the mode manually, instead use the UI in the Network Settings section of about:preferences
+//0 - Off (default). use standard native resolving only (don't use TRR at all)
+//1 - Reserved (used to be Race mode)
+//2 - First. Use TRR first, and only if the name resolve fails use the native resolver as a fallback.
+//3 - Only. Only use TRR. Never use the native (This mode also requires the bootstrapAddress pref to be set)
+//4 - Reserved (used to be Shadow mode)
+//5 - Off by choice. This is the same as 0 but marks it as done by choice and not done by default.
+pref("network.trr.mode", 5);
\ No newline at end of file
Index: firefox-92.0/modules/libpref/init/all.js
===================================================================
--- firefox-92.0.orig/modules/libpref/init/all.js
+++ firefox-92.0/modules/libpref/init/all.js
@@ -794,8 +794,10 @@ pref("toolkit.scrollbox.clickToScroll.sc
 pref("toolkit.tabbox.switchByScrolling", false);
 
 // Telemetry settings.
-// Server to submit telemetry pings to.
-pref("toolkit.telemetry.server", "https://incoming.telemetry.mozilla.org");
+/* MagIns - This preference determines the server used for telemetry pings.
+            Since we don't do telemetry we don't set a server.
+pref("toolkit.telemetry.server", "https://incoming.telemetry.mozilla.org");*/
+pref("toolkit.telemetry.server", "");
 // Telemetry server owner. Please change if you set toolkit.telemetry.server to a different server
 pref("toolkit.telemetry.server_owner", "Mozilla");
 // Determines whether full SQL strings are returned when they might contain sensitive info
@@ -1737,8 +1739,12 @@ pref("network.dns.native-is-localhost",
 // a revalidation in the background.
 pref("network.dnsCacheExpirationGracePeriod", 60);
 
-// This preference can be used to turn off DNS prefetch.
-pref("network.dns.disablePrefetch", false);
+/* MagIns - DNS prefetching allows browser to predict which links users are likely to open.
+            While this can improve performance if the link is accessed, it also creates a
+            privacy leak by automatically connecting users to servers. Firefox enables DNS
+            prefetching by default.
+pref("network.dns.disablePrefetch", false);*/
+pref("network.dns.disablePrefetch", true);
 
 // This preference controls whether .onion hostnames are
 // rejected before being given to DNS. RFC 7686
@@ -3723,11 +3729,16 @@ pref("network.psl.onUpdate_notify", fals
 
 // All the Geolocation preferences are here.
 //
+/* MagIns - By default, geolocation requests go through Google's API, and in Developer/Beta
+            versions uses Mozilla's API. As part of disabling geolocation in MiFF, we remove
+            the API endpoints from the relevant preferences.*/
 #ifndef EARLY_BETA_OR_EARLIER
-  pref("geo.provider.network.url", "https://www.googleapis.com/geolocation/v1/geolocate?key=%GOOGLE_LOCATION_SERVICE_API_KEY%");
+//  pref("geo.provider.network.url", "https://www.googleapis.com/geolocation/v1/geolocate?key=%GOOGLE_LOCATION_SERVICE_API_KEY%");
+  pref("geo.provider.network.url", "");
 #else
   // Use MLS on Nightly and early Beta.
-  pref("geo.provider.network.url", "https://location.services.mozilla.com/v1/geolocate?key=%MOZILLA_API_KEY%");
+//  pref("geo.provider.network.url", "https://location.services.mozilla.com/v1/geolocate?key=%MOZILLA_API_KEY%");
+  pref("geo.provider.network.url", "");
 #endif
 
 // Timeout to wait before sending the location request.
@@ -3750,7 +3761,11 @@ pref("geo.provider.network.timeout", 600
 
 // Region
 pref("browser.region.log", false);
-pref("browser.region.network.url", "https://location.services.mozilla.com/v1/country?key=%MOZILLA_API_KEY%");
+/* MagIns - Mozilla's Location Service determines device location based on cell towers, WiFi
+            access points, and Bluetooth beacons. As part of disabling geolocation in MiFF,
+            we remove the API endpoint from this preference.
+pref("browser.region.network.url", "https://location.services.mozilla.com/v1/country?key=%MOZILLA_API_KEY%");*/
+pref("browser.region.network.url", "");
 // Include wifi data in region request.
 pref("browser.region.network.scan", false);
 // Timeout for whole region request.
@@ -4310,8 +4325,12 @@ pref("layers.omtp.enabled", false);
 //  * userChrome.css
 pref("toolkit.legacyUserProfileCustomizations.stylesheets", false);
 
+/* MagIns - The datareporting.policy.dataSubmissionEnabled preference is the master switch
+            for sending telemetry data to Mozilla. When false, no telemetry is sent. By
+            default, Firefox sets this to true.*/
 #ifdef MOZ_DATA_REPORTING
-  pref("datareporting.policy.dataSubmissionEnabled", true);
+//  pref("datareporting.policy.dataSubmissionEnabled", true);
+  pref("datareporting.policy.dataSubmissionEnabled", false);
   pref("datareporting.policy.dataSubmissionPolicyNotifiedTime", "0");
   pref("datareporting.policy.dataSubmissionPolicyAcceptedVersion", 0);
   pref("datareporting.policy.dataSubmissionPolicyBypassNotification", false);
@@ -4321,12 +4340,15 @@ pref("toolkit.legacyUserProfileCustomiza
   pref("datareporting.policy.firstRunURL", "https://www.mozilla.org/privacy/firefox/");
 #endif
 
+/* MagIns - The Firefox Health Report collects information about browser performance. By
+            default, this upload is enabled.*/
 #ifdef MOZ_SERVICES_HEALTHREPORT
   #if !defined(ANDROID)
     pref("datareporting.healthreport.infoURL", "https://www.mozilla.org/legal/privacy/firefox.html#health-report");
 
     // Health Report is enabled by default on all channels.
-    pref("datareporting.healthreport.uploadEnabled", true);
+//    pref("datareporting.healthreport.uploadEnabled", true);
+    pref("datareporting.healthreport.uploadEnabled", false);
   #endif
 #endif
 
Index: firefox-92.0/browser/components/preferences/privacy.js
===================================================================
--- firefox-92.0.orig/browser/components/preferences/privacy.js
+++ firefox-92.0/browser/components/preferences/privacy.js
@@ -624,13 +624,13 @@ var gPrivacyPane = {
 
     this.initListenersForExtensionControllingPasswordManager();
     // set up the breach alerts Learn More link with the correct URL
-    const breachAlertsLearnMoreLink = document.getElementById(
+/*    const breachAlertsLearnMoreLink = document.getElementById(
       "breachAlertsLearnMoreLink"
     );
     const breachAlertsLearnMoreUrl =
       Services.urlFormatter.formatURLPref("app.support.baseURL") +
       "lockwise-alerts";
-    breachAlertsLearnMoreLink.setAttribute("href", breachAlertsLearnMoreUrl);
+    breachAlertsLearnMoreLink.setAttribute("href", breachAlertsLearnMoreUrl);*/
 
     this._initSafeBrowsing();
 
@@ -770,6 +770,8 @@ var gPrivacyPane = {
         .setAttribute("href", windowsSSOURL);
     }
 
+/* MagIns - To prevent users from reenabling Telemetry uploads, we comment out the code
+            initiating those sections of the Preferences page.
     if (AppConstants.MOZ_DATA_REPORTING) {
       this.initDataCollection();
       if (AppConstants.MOZ_CRASHREPORTER) {
@@ -790,7 +792,7 @@ var gPrivacyPane = {
         this.initOptOutStudyCheckbox();
       }
       this.initAddonRecommendationsCheckbox();
-    }
+    }*/
 
     let signonBundle = document.getElementById("signonBundle");
     let pkiBundle = document.getElementById("pkiBundle");
Index: firefox-92.0/toolkit/components/normandy/lib/ClientEnvironment.jsm
===================================================================
--- firefox-92.0.orig/toolkit/components/normandy/lib/ClientEnvironment.jsm
+++ firefox-92.0/toolkit/components/normandy/lib/ClientEnvironment.jsm
@@ -53,7 +53,10 @@ class ClientEnvironment extends ClientEn
    */
   static async getClientClassification() {
     if (!_classifyRequest) {
-      _classifyRequest = NormandyApi.classifyClient();
+/* MagIns - classifyClient() sends a ping to Mozilla, returning with the user's country
+            and the timestamp of the request. There is no option to disable this through
+            preferences.
+      _classifyRequest = NormandyApi.classifyClient();*/
     }
     return _classifyRequest;
   }
Index: firefox-92.0/services/fxaccounts/FxAccountsClient.jsm
===================================================================
--- firefox-92.0.orig/services/fxaccounts/FxAccountsClient.jsm
+++ firefox-92.0/services/fxaccounts/FxAccountsClient.jsm
@@ -542,7 +542,12 @@ FxAccountsClient.prototype = {
    */
   async registerDevice(sessionTokenHex, name, type, options = {}) {
     let path = "/account/device";
-
+/* MagIns - By default, Firefox reads the name of your device and sends it to their server
+            when a device signs on to Sync for the first time. By setting the name to an
+            empty string here, users can still name devices if they so choose but we do not
+            collect this information by default. This feature will allow us to do alerts for
+            Sync changes in the future.*/
+    name = "";
     let creds = await deriveHawkCredentials(sessionTokenHex, "sessionToken");
     let body = { name, type };
 
Index: firefox-92.0/browser/components/preferences/privacy.inc.xhtml
===================================================================
--- firefox-92.0.orig/browser/components/preferences/privacy.inc.xhtml
+++ firefox-92.0/browser/components/preferences/privacy.inc.xhtml
@@ -828,6 +828,8 @@
 
 <!-- Firefox Data Collection and Use -->
 #ifdef MOZ_DATA_REPORTING
+<!-- MagIns - We have all data reporting disabled through preferences, so we remove the HTML elements from
+              preferences so that typical users easily enable data reporting accidentally.
 <hbox id="dataCollectionCategory"
       class="subcategory"
       hidden="true"
@@ -910,7 +912,7 @@
     </hbox>
 #endif
   </vbox>
-</groupbox>
+</groupbox>-->
 #endif
 
 <hbox id="securityCategory"
