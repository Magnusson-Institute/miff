Index: mozilla-release/browser/components/preferences/search.js
===================================================================
--- mozilla-release.orig/browser/components/preferences/search.js
+++ mozilla-release/browser/components/preferences/search.js
@@ -268,6 +268,9 @@ var gSearchPane = {
     // Now clean-up and rebuild the list.
     list.removeAllItems();
     gEngineView._engineStore._engines.forEach(e => {
+      if(e.name == "Google" || e.name == "Bing" || e.name == "Amazon.com" || e.name == "eBay"){
+        gSearchPane.remove(e)
+      } else {
       let item = list.appendItem(e.name);
       item.setAttribute(
         "class",
@@ -280,7 +283,7 @@ var gSearchPane = {
       if (e.name == currentEngine) {
         list.selectedItem = item;
       }
-    });
+    }});
   },
 
   handleEvent(aEvent) {
Index: mozilla-release/toolkit/components/search/SearchService.sys.mjs
===================================================================
--- mozilla-release.orig/toolkit/components/search/SearchService.sys.mjs
+++ mozilla-release/toolkit/components/search/SearchService.sys.mjs
@@ -1194,6 +1194,12 @@ export class SearchService {
       : this.#currentEngine;
 
     if (currentEngine && !currentEngine.hidden) {
+/* MagIns - Firefox sets Google as the default search engine. When Google is the current engine, change the
+            default engine. We pass the phony engine "MagIns" to force a change to DuckDuckGo as the default
+            search engine.*/
+      if (currentEngine.name == "Google") {
+        return this.#findAndSetNewDefaultEngine({ privateMode: privateMode, excludeEngineName: "MagIns", });
+      }
       return currentEngine;
     }
 
@@ -2741,20 +2747,35 @@ export class SearchService {
    * @returns {nsISearchEngine|null}
    *   The appropriate search engine, or null if one could not be determined.
    */
-  #findAndSetNewDefaultEngine({ privateMode }) {
+/* MagIns - Add another parameter to specificically remove certain search engines
+  #findAndSetNewDefaultEngine({ privateMode }) {*/
+  #findAndSetNewDefaultEngine({ privateMode, excludeEngineName = "" }) {
     // First to the app default engine...
     let newDefault = privateMode
       ? this.appPrivateDefaultEngine
       : this.appDefaultEngine;
 
-    if (!newDefault || newDefault.hidden || newDefault.pendingRemoval) {
+// MagIns - Add an OR condition for the "MagIns" excludeEngineName to force a change to newDefault
+    if (!newDefault || newDefault.hidden || newDefault.pendingRemoval || excludeEngineName == "MagIns") {
       let sortedEngines = this.#sortedVisibleEngines;
       let generalSearchEngines = sortedEngines.filter(
         e => e.isGeneralPurposeEngine
       );
 
       // then to the first visible general search engine that isn't excluded...
-      let firstVisible = generalSearchEngines.find(e => !e.pendingRemoval);
+/* MagIns - If there is no value for excludeEngineName (i.e. the default isn't being
+            changed by the user) set DuckDuckGo as the default search engine.
+      let firstVisible = generalSearchEngines.find(e => !e.pendingRemoval);*/
+      let firstVisible;
+      if (excludeEngineName == "MagIns"){
+        firstVisible = generalSearchEngines.find(
+          e => e.name == "DuckDuckGo"
+        );
+      } else {
+        firstVisible = generalSearchEngines.find(
+          e => e.name != excludeEngineName
+        );
+      }
       if (firstVisible) {
         newDefault = firstVisible;
       } else if (newDefault) {
