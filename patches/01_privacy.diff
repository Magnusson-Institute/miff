Index: firefox-102.0/browser/app/profile/firefox.js
===================================================================
--- firefox-102.0.orig/browser/app/profile/firefox.js
+++ firefox-102.0/browser/app/profile/firefox.js
@@ -36,12 +36,19 @@ pref("extensions.webextOptionalPermissio
 pref("extensions.postDownloadThirdPartyPrompt", true);
 
 // Preferences for AMO integration
-pref("extensions.getAddons.cache.enabled", true);
+/* MagIns - When enabled, the browser does a daily ping to Mozilla, sending information about installed add-ons
+            and returning updated metadata (screenshots, ratings, descriptions) about your add-ons
+pref("extensions.getAddons.cache.enabled", true);*/
+pref("extensions.getAddons.cache.enabled", false);
 pref("extensions.getAddons.get.url", "https://services.addons.mozilla.org/api/v4/addons/search/?guid=%IDS%&lang=%LOCALE%");
 pref("extensions.getAddons.search.browseURL", "https://addons.mozilla.org/%LOCALE%/firefox/search?q=%TERMS%&platform=%OS%&appver=%VERSION%");
 pref("extensions.getAddons.link.url", "https://addons.mozilla.org/%LOCALE%/firefox/");
 pref("extensions.getAddons.langpacks.url", "https://services.addons.mozilla.org/api/v4/addons/language-tools/?app=firefox&type=language&appversion=%VERSION%");
-pref("extensions.getAddons.discovery.api_url", "https://services.addons.mozilla.org/api/v4/discovery/?lang=%LOCALE%&edition=%DISTRIBUTION%");
+/* MagIns - Mozilla provides addon recommendations, returned by a ping to the below URL. In addition to the two
+            parameters below, the user's telemetry client ID is added as a parameter if users have telemetry
+            enabled (which is on by default in Firefox).
+pref("extensions.getAddons.discovery.api_url", "https://services.addons.mozilla.org/api/v4/discovery/?lang=%LOCALE%&edition=%DISTRIBUTION%");*/
+pref("extensions.getAddons.discovery.api_url", "");
 
 // The URL for the privacy policy related to recommended extensions.
 pref("extensions.recommendations.privacyPolicyUrl", "https://www.mozilla.org/privacy/firefox/?utm_source=firefox-browser&utm_medium=firefox-browser&utm_content=privacy-policy-link#addons");
@@ -507,6 +514,9 @@ pref("browser.urlbar.extension.timeout",
 // searched for. If the string is resolved as a valid host, show a
 // "Did you mean to go to 'host'" prompt.
 // 0 - never resolve; 1 - use heuristics (default); 2 - always resolve
+/* MagIns - With the default behavior, searching for a single word will occasionally
+            leak the search term to the DNS provider.
+            (Arkenfox 0806)*/
 pref("browser.urlbar.dnsResolveSingleWordsAfterSearch", 1);
 
 // Whether the results panel should be kept open during IME composition.
@@ -1184,7 +1194,10 @@ pref("browser.zoom.siteSpecific", true);
 pref("browser.zoom.updateBackgroundTabs", true);
 
 // The breakpad report server to link to in about:crashes
-pref("breakpad.reportURL", "https://crash-stats.mozilla.org/report/index/");
+/* MagIns - Set an empty string for Mozilla's crash report URL
+            (Arkenfox 0350)
+pref("breakpad.reportURL", "https://crash-stats.mozilla.org/report/index/");*/
+pref("breakpad.reportURL", "");
 
 // URL for "Learn More" for DataCollection
 pref("toolkit.datacollection.infoURL",
@@ -1472,7 +1485,11 @@ pref("browser.menu.showCharacterEncoding
 // This is a fallback value for when prompt callers do not specify a modalType.
 pref("prompts.defaultModalType", 3);
 
-pref("browser.topsites.useRemoteSetting", true);
+/* MagIns - Firefox presents sponsored websites as "Top Sites", the list of which is
+            maintained by Remote Settings. We don't want sponsored sites, so don't
+            bother fetching them.
+pref("browser.topsites.useRemoteSetting", true);*/
+pref("browser.topsites.useRemoteSetting", false);
 // Fetch sponsored Top Sites from Mozilla Tiles Service (Contile)
 pref("browser.topsites.contile.enabled", true);
 pref("browser.topsites.contile.endpoint", "https://contile.services.mozilla.com/v1/tiles");
@@ -1518,7 +1535,10 @@ pref("browser.newtabpage.activity-stream
 // This url, if changed, MUST continue to point to an https url. Pulling arbitrary content to inject into
 // this page over http opens us up to a man-in-the-middle attack that we'd rather not face. If you are a downstream
 // repackager of this code using an alternate snippet url, please keep your users safe
-pref("browser.newtabpage.activity-stream.asrouter.providers.snippets", "{\"id\":\"snippets\",\"enabled\":false,\"type\":\"remote\",\"url\":\"https://snippets.cdn.mozilla.net/%STARTPAGE_VERSION%/%NAME%/%VERSION%/%APPBUILDID%/%BUILD_TARGET%/%LOCALE%/%CHANNEL%/%OS_VERSION%/%DISTRIBUTION%/%DISTRIBUTION_VERSION%/\",\"updateCycleInMs\":14400000}");
+/* MagIns - Snippets are small banners on the Home page provided by Mozilla to give tips about Firefox.
+            The snippets content depend on version, OS, build, update channel, etc., thus sending breadcrumbs
+            about your computer to Mozilla.
+pref("browser.newtabpage.activity-stream.asrouter.providers.snippets", "{\"id\":\"snippets\",\"enabled\":false,\"type\":\"remote\",\"url\":\"https://snippets.cdn.mozilla.net/%STARTPAGE_VERSION%/%NAME%/%VERSION%/%APPBUILDID%/%BUILD_TARGET%/%LOCALE%/%CHANNEL%/%OS_VERSION%/%DISTRIBUTION%/%DISTRIBUTION_VERSION%/\",\"updateCycleInMs\":14400000}");*/
 pref("browser.newtabpage.activity-stream.asrouter.providers.messaging-experiments", "{\"id\":\"messaging-experiments\",\"enabled\":true,\"type\":\"remote-experiments\",\"messageGroups\":[\"cfr\",\"aboutwelcome\",\"infobar\",\"spotlight\",\"moments-page\",\"pbNewtab\"],\"updateCycleInMs\":3600000}");
 
 // ASRouter user prefs
@@ -1778,23 +1798,40 @@ pref("browser.translation.ui.show", fals
 pref("browser.translation.engine", "Google");
 
 // Telemetry settings.
-// Determines if Telemetry pings can be archived locally.
-pref("toolkit.telemetry.archive.enabled", true);
-// Enables sending the shutdown ping when Firefox shuts down.
-pref("toolkit.telemetry.shutdownPingSender.enabled", true);
+/* MagIns - Determines if Telemetry pings can be archived locally.
+            (Arkenfox 0332)
+pref("toolkit.telemetry.archive.enabled", true);*/
+pref("toolkit.telemetry.archive.enabled", false);
+/* MagIns - Enables sending the shutdown ping when Firefox shuts down.
+            (Arkenfox 0332)
+pref("toolkit.telemetry.shutdownPingSender.enabled", true);*/
+pref("toolkit.telemetry.shutdownPingSender.enabled", false);
 // Enables sending the shutdown ping using the pingsender from the first session.
 pref("toolkit.telemetry.shutdownPingSender.enabledFirstSession", false);
-// Enables sending a duplicate of the first shutdown ping from the first session.
-pref("toolkit.telemetry.firstShutdownPing.enabled", true);
-// Enables sending the 'new-profile' ping on new profiles.
-pref("toolkit.telemetry.newProfilePing.enabled", true);
-// Enables sending 'update' pings on Firefox updates.
-pref("toolkit.telemetry.updatePing.enabled", true);
-// Enables sending 'bhr' pings when the browser hangs.
-pref("toolkit.telemetry.bhrPing.enabled", true);
+/* MagIns - Enables sending a duplicate of the first shutdown ping from the first session.
+            (Arkenfox 0332)
+pref("toolkit.telemetry.firstShutdownPing.enabled", true);*/
+pref("toolkit.telemetry.firstShutdownPing.enabled", false);
+/* MagIns - Enables sending the 'new-profile' ping on new profiles.
+            (Arkenfox 0332)
+pref("toolkit.telemetry.newProfilePing.enabled", true);*/
+pref("toolkit.telemetry.newProfilePing.enabled", false);
+/* MagIns - Enables sending 'update' pings on Firefox updates.
+            (Arkenfox 0332)
+pref("toolkit.telemetry.updatePing.enabled", true);*/
+pref("toolkit.telemetry.updatePing.enabled", false);
+/* MagIns - Enables sending 'bhr' pings when the browser hangs.
+            (Arkenfox 0332)
+pref("toolkit.telemetry.bhrPing.enabled", true);*/
+pref("toolkit.telemetry.bhrPing.enabled", false);
 
 // Ping Centre Telemetry settings.
-pref("browser.ping-centre.telemetry", true);
+/* MagIns - PingCentre is used by several System addons. This preference is superceded by
+            datareporting.healthreport.uploadEnabled, but we disable this preference for
+            defense in depth.
+            (Arkenfox 0334)
+pref("browser.ping-centre.telemetry", true);*/
+pref("browser.ping-centre.telemetry", false);
 pref("browser.ping-centre.log", false);
 
 // Enable GMP support in the addon manager.
@@ -2030,7 +2067,10 @@ pref("browser.tabs.remote.warmup.maxTabs
 pref("browser.tabs.remote.warmup.unloadDelayMs", 2000);
 
 // For the about:tabcrashed page
-pref("browser.tabs.crashReporting.sendReport", true);
+/* MagIns - Disable Mozilla crash reports
+            (Arkenfox 0350)
+pref("browser.tabs.crashReporting.sendReport", true);*/
+pref("browser.tabs.crashReporting.sendReport", false);
 pref("browser.tabs.crashReporting.includeURL", false);
 
 // If true, unprivileged extensions may use experimental APIs on
@@ -2175,17 +2215,26 @@ pref("browser.chrome.errorReporter.infoU
      "https://support.mozilla.org/1/firefox/%VERSION%/%OS%/%LOCALE%/nightly-error-collection");
 
 // Normandy client preferences
-pref("app.normandy.api_url", "https://normandy.cdn.mozilla.net/api/v1");
+/* MagIns - Normandy allows Mozilla to remotely change Firefox clients, primarily
+            for testing and studies. These include changing preferences permanently
+            and installing addons without prompting users.
+            (Arkenfox 0341)*/
+pref("app.normandy.api_url", "");
 pref("app.normandy.dev_mode", false);
-pref("app.normandy.enabled", true);
+pref("app.normandy.enabled", false);
 pref("app.normandy.first_run", true);
 pref("app.normandy.logging.level", 50); // Warn
 pref("app.normandy.run_interval_seconds", 21600); // 6 hours
 pref("app.normandy.shieldLearnMoreUrl", "https://support.mozilla.org/1/firefox/%VERSION%/%OS%/%LOCALE%/shield");
 pref("app.normandy.last_seen_buildid", "");
 pref("app.normandy.onsync_skew_sec", 600);
+/* MagIns - By default, Firefox is allowed to install features and tools to your browser through
+            studies. Users are often enrolled automatically, only prompted for participation when
+            the study exceeds the default data collection policy.
+            (Arkenfox 0340)*/
 #ifdef MOZ_DATA_REPORTING
-  pref("app.shield.optoutstudies.enabled", true);
+//  pref("app.shield.optoutstudies.enabled", true);
+  pref("app.shield.optoutstudies.enabled", false);
 #else
   pref("app.shield.optoutstudies.enabled", false);
 #endif
@@ -2228,7 +2277,14 @@ pref("fission.frontend.simulate-messages
 
 // Coverage ping is disabled by default.
 pref("toolkit.coverage.enabled", false);
-pref("toolkit.coverage.endpoint.base", "https://coverage.mozilla.org");
+/* MagIns - Coverage is a telemetry tool used to count "follow-on searches," which
+            begin in Firefox and continue on search engine pages. The ping is
+            disabled by default, and we remove the endpoint for redundancy. In
+            addition, explicitly set the hidden opt-out preference.
+            (Arkenfox 0333)
+pref("toolkit.coverage.endpoint.base", "https://coverage.mozilla.org");*/
+pref("toolkit.coverage.endpoint.base", "");
+pref("toolkit.coverage.opt-out", true);
 
 // Discovery prefs
 pref("browser.discovery.enabled", true);
@@ -2654,7 +2710,11 @@ pref("first-startup.timeout", 30000);
 // The agent still runs as scheduled if this pref is disabled,
 // but it exits immediately before taking any action.
 #ifdef XP_WIN
-  pref("default-browser-agent.enabled", true);
+/* MagIns - When true, a scheduled task is added to Windows during browser
+            installation. This task checks what the OS has set as the default
+            browser and sends this information to Mozilla.
+  pref("default-browser-agent.enabled", true);*/
+  pref("default-browser-agent.enabled", false);
 #endif
 
 // Test Prefs that do nothing for testing
@@ -2704,3 +2764,125 @@ pref("browser.snapshots.relevancy.timeOf
 pref("browser.places.snapshots.expiration.days", 210);
 // For user managed snapshots we use more than a year, to support yearly tasks.
 pref("browser.places.snapshots.expiration.userManaged.days", 420);
+
+/* MagIns - The browser milestone records the version number of the last successful
+            startup. After updates/upgrades, the user's homepage is changed to show
+            a promotional page about the update. Setting this to "ignore", the value
+            is never updated.*/
+pref("browser.startup.homepage_override.mstone", "ignore");
+
+/* MagIns - Like the mstone, the build ID is changed after updates. This ID is a
+            timestamp of the build, YYYYMMDDHHMMSS*/
+"browser.startup.homepage_override.buildID" = "";
+
+/* MagIns - The browser.contentblocking.category preference is Mozilla's Enhanced
+            Tracking Protection feature. This is visible to users in the
+            about:preferences page. By default, it is set to standard.*/
+pref("browser.contentblocking.category", "strict");
+
+/* MagIns - When true, Enhanced Tracking Protection will block tracking content in
+            all windows. When false, these protections only apply to private windows.
+            Due to the "Custom" option for ETP, there is some overlap between this
+            preference and browser.contentblocking.category: Standard applies to
+            private windows, Strict applies to all.*/
+pref("privacy.trackingprotection.enabled", true);
+
+/* MagIns - When true, Enhanced Tracking Protection will block social media trackers.
+            Due to the "Custom" option for ETP, there is some overlap between this
+            preference and browser.contentblocking.category: Standard and Strict both
+            block social media trackers, but Custom has an option to allow them.*/
+pref("privacy.trackingprotection.socialtracking.enabled", true);
+
+/* MagIns - The EFF's Do Not Track policy outlines how websites can maintain user
+            privacy, by removing tracking data from users that include a Do Not track
+            header in HTTP requests. Since the burden of implementing DNT is on websites,
+            the header is best used in conjunction with tools like PrivacyBadger, which
+            blocks tracking content from sites that do not respect DNT. Firefox by
+            default does not send a DNT header, so even sites that do respect DNT are
+            permitted to track users.*/
+pref("privacy.donottrackheader.enabled", true);
+
+/* MagIns - Enable HTTPS-Only Mode in all windows.*/
+pref("dom.security.https_only_mode", true);
+
+/* MagIns - With geolocation enabled, websites are allowed to ask for your location.
+            When this preference is set to false, no prompt is shown to the user.*/
+pref("geo.enabled", false);
+
+/* MagIns - The media.navigator.enabled preference allows WebRTC to access the name
+            of devices*/
+pref("media.navigator.enabled", false);
+
+//This preference determines when cookies are deleted. Here are the different
+//options:
+//0 = Accept cookies normally
+//1 = Prompt for each cookie
+//2 = Accept for current session only
+//3 = Accept for N days
+pref("network.cookie.lifetimePolicy", 2);
+
+/* MagIns - This preference enables several different privacy protections, as part
+            of Firefox's TOR Uplift project. These include:
+                Blocking canvas image extraction
+                Obscuring absolute screen coordinates
+                Window dimensions rounded to multiple of 200x100
+                Time precision reduced and jitter added
+                WebGL is limited
+                Spoofed keyboard layout
+                Locale spoofed to en-US
+                Timezone spoofed as UTC
+                Various APIs disabled
+            The umbrella preference defaults to false on Firefox, but there are
+            individual preferences for timing precision and canvas image extraction
+            protections, both of which are enabled by default
+            (privacy.resistFingerprinting.reduceTimerPrecision and
+            privacy.resistFingerprinting.autoDeclineNoUserInputCanvasPrompts, respectively).*/
+pref("privacy.resistFingerprinting", true);
+
+//Setting this preference to false will disable data sharing with Firefox for
+//Android
+pref("toolkit.telemetry.enabled", false);
+
+/* MagIns - WebGL is a JavaScript API conforming closely to OpenGL, thus allowing the API
+            to use hardware acceleration with a user's GPU. It also creates a fingerprint
+            based on monitor resolution and graphics card capabilities, which can be used
+            to track users. For privacy, we disable WebGL.*/
+pref("webgl.disabled", true);
+
+/* MagIns - This preference enables the Navigator.sendBeacon() function. This function transmits
+            a small bit of data over HTTP for analytics and diagnostics, usually when the user
+            leaves a page. Firefox sets this to true by default.*/
+pref("beacon.enabled", false);
+
+/* MagIns - When users navigate via links, a 'referer' header is added to the HTTP request to
+            indicate which site the user came from. This has many security and privacy concerns.
+            By default, Firefox sets this preference to 0, or "always send." We set it to 1, or
+            "send only if base domains match."*/
+pref("network.http.referer.XOriginPolicy", 1);
+
+/* MagIns - The Sensors API exposes physical sensors, such as motion, ambient light, or device
+            orientation, to the web. These sensors can be used to track behavior, including
+            typing patterns on bank PINs (see here: https://blog.lukaszolejnik.com/additional-security-and-privacy-risks-of-light-sensors/),
+            or discover a user's location. By default, Firefox disables the proximity and ambient
+            light sensors, and enables motion and orientation sensors. We disable all sensors.*/
+pref("device.sensors.enabled", false);
+
+/* MagIns - The Battery Status API can be used to determine charge level and discharge time.
+            This information can be used to create tracking identifiers of users or
+            distinguish devices behind a NAT. Firefox removed access to this API for websites
+            in Firefox 52 because of these privacy concerns, but continues to enable the API
+            for the browser itself.*/
+pref("dom.battery.enabled", false);
+
+/* MagIns - When enabled, this preference allows notifications to be sent when a user copies,
+            pastes, or cuts something from a webpage. Firefox enables this by default.*/
+pref("dom.event.clipboardevents.enabled", false);
+
+//The resolver mode. You should not change the mode manually, instead use the UI in the Network Settings section of about:preferences
+//0 - Off (default). use standard native resolving only (don't use TRR at all)
+//1 - Reserved (used to be Race mode)
+//2 - First. Use TRR first, and only if the name resolve fails use the native resolver as a fallback.
+//3 - Only. Only use TRR. Never use the native (This mode also requires the bootstrapAddress pref to be set)
+//4 - Reserved (used to be Shadow mode)
+//5 - Off by choice. This is the same as 0 but marks it as done by choice and not done by default.
+pref("network.trr.mode", 5);
Index: firefox-102.0/modules/libpref/init/all.js
===================================================================
--- firefox-102.0.orig/modules/libpref/init/all.js
+++ firefox-102.0/modules/libpref/init/all.js
@@ -684,15 +684,24 @@ pref("toolkit.sqlitejsm.loglevel", "Erro
 pref("toolkit.tabbox.switchByScrolling", false);
 
 // Telemetry settings.
-// Server to submit telemetry pings to.
-pref("toolkit.telemetry.server", "https://incoming.telemetry.mozilla.org");
+/* MagIns - This preference determines the server used for telemetry pings.
+            Since we don't do telemetry we don't set a server.
+pref("toolkit.telemetry.server", "https://incoming.telemetry.mozilla.org");*/
+pref("toolkit.telemetry.server", "");
 // Telemetry server owner. Please change if you set toolkit.telemetry.server to a different server
 pref("toolkit.telemetry.server_owner", "Mozilla");
 // Determines whether full SQL strings are returned when they might contain sensitive info
 // i.e. dynamically constructed SQL strings or SQL executed by addons against addon DBs
 pref("toolkit.telemetry.debugSlowSql", false);
 // Whether to use the unified telemetry behavior, requires a restart.
-pref("toolkit.telemetry.unified", true);
+/* MagIns - This telemetry preference controls the behavior of the
+            toolkit.telemetry.enabled preference as part of Mozilla's production
+            process. When "unified" is true, the "enabled" preference controls
+            whether to record extended telemetry data. When "unified" is false,
+            "enabled" controls the whole telemetry module
+            (Arkenfox 0332)
+pref("toolkit.telemetry.unified", true);*/
+pref("toolkit.telemetry.unified", false);
 // AsyncShutdown delay before crashing in case of shutdown freeze
 #if !defined(MOZ_ASAN) && !defined(MOZ_TSAN)
   pref("toolkit.asyncshutdown.crash_timeout", 60000); // 1 minute
@@ -809,7 +818,12 @@ pref("view_source.editor.args", "");
 pref("nglayout.enable_drag_images", true);
 
 // URI fixup prefs
-pref("browser.fixup.alternate.enabled", true);
+/* MagIns - By default, Firefox tries to fix "hostname not found" DNS errors
+            by adding the below elements. This is both a security and privacy
+            issue as it connects to unintended sites automatically.
+            (Arkenfox 0802)
+pref("browser.fixup.alternate.enabled", true);*/
+pref("browser.fixup.alternate.enabled", false);
 pref("browser.fixup.alternate.prefix", "www.");
 pref("browser.fixup.alternate.protocol", "https");
 pref("browser.fixup.alternate.suffix", ".com");
@@ -1278,7 +1292,12 @@ pref("network.http.network-changed.timeo
 
 // The maximum number of current global half open sockets allowable
 // when starting a new speculative connection.
-pref("network.http.speculative-parallel-limit", 6);
+/* MagIns - By default, Firefox connects to sites when users start typing in the
+            search bar or hover over thumbnails on the New Tab Page. We disable
+            this feature to prevent privacy leaks.
+            (Arkenfox 0604)
+pref("network.http.speculative-parallel-limit", 6);*/
+pref("network.http.speculative-parallel-limit", 0);
 
 // Whether or not to block requests for non head js/css items (e.g. media)
 // while those elements load.
@@ -1577,7 +1596,11 @@ pref("network.IDN.extra_blocked_chars",
 pref("network.dns.ipv4OnlyDomains", "");
 
 // This preference can be used to turn off IPv6 name lookups. See bug 68796.
-pref("network.dns.disableIPv6", false);
+/* MagIns - IPv6 has the potential to leak user IP addresses with VPNs. We
+            disable this as part of hardening our VPN infrastructure.
+            (Arkenfox 0701)
+pref("network.dns.disableIPv6", false);*/
+pref("network.dns.disableIPv6", true);
 
 // This is the number of dns cache entries allowed
 pref("network.dnsCacheEntries", 400);
@@ -1596,8 +1619,13 @@ pref("network.dns.native-is-localhost",
 // a revalidation in the background.
 pref("network.dnsCacheExpirationGracePeriod", 60);
 
-// This preference can be used to turn off DNS prefetch.
-pref("network.dns.disablePrefetch", false);
+/* MagIns - With DNS prefetching, sites can indicate to browsers that external domains
+            are likely to be needed by users. While it improves performance if the link
+            is accessed, it also creates a privacy leak by automatically connecting users
+            to third-party servers. Firefox enables DNS prefetching by default.
+            (Arkenfox 0602)
+pref("network.dns.disablePrefetch", false);*/
+pref("network.dns.disablePrefetch", true);
 
 // This preference controls whether .onion hostnames are
 // rejected before being given to DNS. RFC 7686
@@ -1620,7 +1648,13 @@ pref("network.dns.resolver-thread-extra-
 
 // enables the prefetch service (i.e., prefetching of <link rel="next"> and
 // <link rel="prefetch"> URLs).
-pref("network.prefetch-next", true);
+/* MagIns - Link prefetching allows browsers to load resources ahead of time that users
+            are likely to need, based on rel="prefetch" parameter in HTML pages. While
+            this can improve performance if the resource is accessed, it also creates a
+            privacy leak by automatically connecting users to servers. Firefox sets this
+            to true by default.
+pref("network.prefetch-next", true);*/
+pref("network.prefetch-next", false);
 
 // The following prefs pertain to the negotiate-auth extension (see bug 17578),
 // which provides transparent Kerberos or NTLM authentication using the SPNEGO
@@ -3459,7 +3493,11 @@ pref("font.size.monospace.x-math", 13);
 // Login Manager prefs
 pref("signon.rememberSignons",              true);
 pref("signon.rememberSignons.visibilityToggle", true);
-pref("signon.autofillForms",                true);
+/* MagIns - By default, Firefox autofills username and password on websites.
+            This creates a security flaw, where invisible login fields can
+            be injected and read user data.
+pref("signon.autofillForms",                true);*/
+pref("signon.autofillForms",                false);
 pref("signon.autofillForms.autocompleteOff", true);
 pref("signon.autofillForms.http",           false);
 pref("signon.autologin.proxy",              false);
@@ -3490,7 +3528,12 @@ pref("signon.showAutoCompleteOrigins",
 
 // Satchel (Form Manager) prefs
 pref("browser.formfill.debug",            false);
-pref("browser.formfill.enable",           true);
+/* MagIns - This preference enables Form Autofill. This data is not securely stored on a user's
+            device. Additionally, there are security concerns with sites using hidden forms to
+            access autofill data. For these reasons, we disable Autofill.
+            (Arkenfox 0810)
+pref("browser.formfill.enable",           true);*/
+pref("browser.formfill.enable",           false);
 pref("browser.formfill.expire_days",      180);
 pref("browser.formfill.agedWeight",       2);
 pref("browser.formfill.bucketSize",       1);
@@ -3555,11 +3598,16 @@ pref("network.psl.onUpdate_notify", fals
 
 // All the Geolocation preferences are here.
 //
+/* MagIns - By default, geolocation requests go through Google's API, and in Developer/Beta
+            versions uses Mozilla's API. As part of disabling geolocation in MiFF, we remove
+            the API endpoints from the relevant preferences.*/
 #ifndef EARLY_BETA_OR_EARLIER
-  pref("geo.provider.network.url", "https://www.googleapis.com/geolocation/v1/geolocate?key=%GOOGLE_LOCATION_SERVICE_API_KEY%");
+//  pref("geo.provider.network.url", "https://www.googleapis.com/geolocation/v1/geolocate?key=%GOOGLE_LOCATION_SERVICE_API_KEY%");
+  pref("geo.provider.network.url", "");
 #else
   // Use MLS on Nightly and early Beta.
-  pref("geo.provider.network.url", "https://location.services.mozilla.com/v1/geolocate?key=%MOZILLA_API_KEY%");
+//  pref("geo.provider.network.url", "https://location.services.mozilla.com/v1/geolocate?key=%MOZILLA_API_KEY%");
+  pref("geo.provider.network.url", "");
 #endif
 
 // Timeout to wait before sending the location request.
@@ -3567,27 +3615,41 @@ pref("geo.provider.network.timeToWaitBef
 // Timeout for outbound network geolocation provider.
 pref("geo.provider.network.timeout", 60000);
 
+/* MagIns - The following prefs control OS-level geolocation services. As part of disabling
+            geolocation in MiFF, we set these preferences to false.*/
 #ifdef XP_MACOSX
-  pref("geo.provider.use_corelocation", true);
+//  pref("geo.provider.use_corelocation", true);
+  pref("geo.provider.use_corelocation", false);
 #endif
 
 // Set to false if things are really broken.
 #ifdef XP_WIN
-  pref("geo.provider.ms-windows-location", true);
+//  pref("geo.provider.ms-windows-location", true);
+  pref("geo.provider.ms-windows-location", false);
 #endif
 
 #if defined(MOZ_WIDGET_GTK) && defined(MOZ_GPSD)
-  pref("geo.provider.use_gpsd", true);
+//  pref("geo.provider.use_gpsd", true);
+  pref("geo.provider.use_gpsd", false);
 #endif
 
 // Region
 pref("browser.region.log", false);
-pref("browser.region.network.url", "https://location.services.mozilla.com/v1/country?key=%MOZILLA_API_KEY%");
+/* MagIns - Mozilla's Location Service determines device location based on cell towers, WiFi
+            access points, and Bluetooth beacons. It then uses the region to curate content
+            and determine a user's "home" region. As part of disabling geolocation in MiFF,
+            we remove the API endpoint from this preference.
+pref("browser.region.network.url", "https://location.services.mozilla.com/v1/country?key=%MOZILLA_API_KEY%");*/
+pref("browser.region.network.url", "");
 // Include wifi data in region request.
 pref("browser.region.network.scan", false);
 // Timeout for whole region request.
 pref("browser.region.timeout", 5000);
-pref("browser.region.update.enabled", true);
+/* MagIns - By default, Firefox will change a user's "home" region after detecting that a user
+            is outside their home region for a continuous period. We set this preference to
+            false to prevent Firefox from trying to update the user's region.
+pref("browser.region.update.enabled", true);*/
+pref("browser.region.update.enabled", false);
 
 // Enable/Disable the device storage API for content
 pref("device.storage.enabled", false);
@@ -3763,7 +3825,11 @@ pref("network.captive-portal-service.max
 pref("network.captive-portal-service.backoffFactor", "5.0");
 pref("network.captive-portal-service.enabled", false);
 
-pref("network.connectivity-service.enabled", true);
+/* MagIns - The network connectivity service works similarly to a captive portal
+            check, but additionally provides Mozilla about the user's network path
+            including TLS 1.3 and IPv6.
+            (Arkenfox 0361)*/
+pref("network.connectivity-service.enabled", false);
 pref("network.connectivity-service.DNSv4.domain", "example.org");
 pref("network.connectivity-service.DNSv6.domain", "example.org");
 pref("network.connectivity-service.IPv4.url", "http://detectportal.firefox.com/success.txt?ipv4");
@@ -4152,8 +4218,12 @@ pref("toolkit.aboutProcesses.profileDura
 //  * userChrome.css
 pref("toolkit.legacyUserProfileCustomizations.stylesheets", false);
 
+/* MagIns - The datareporting.policy.dataSubmissionEnabled preference is the master switch
+            for sending telemetry data to Mozilla. When false, no telemetry is sent. By
+            default, Firefox sets this to true. (Arkenfox 0330)*/
 #ifdef MOZ_DATA_REPORTING
-  pref("datareporting.policy.dataSubmissionEnabled", true);
+//  pref("datareporting.policy.dataSubmissionEnabled", true);
+  pref("datareporting.policy.dataSubmissionEnabled", false);
   pref("datareporting.policy.dataSubmissionPolicyNotifiedTime", "0");
   pref("datareporting.policy.dataSubmissionPolicyAcceptedVersion", 0);
   pref("datareporting.policy.dataSubmissionPolicyBypassNotification", false);
@@ -4163,12 +4233,15 @@ pref("toolkit.legacyUserProfileCustomiza
   pref("datareporting.policy.firstRunURL", "https://www.mozilla.org/privacy/firefox/");
 #endif
 
+/* MagIns - The Firefox Health Report collects information about browser performance. By
+            default, this upload is enabled.*/
 #ifdef MOZ_SERVICES_HEALTHREPORT
   #if !defined(ANDROID)
     pref("datareporting.healthreport.infoURL", "https://www.mozilla.org/legal/privacy/firefox.html#health-report");
 
     // Health Report is enabled by default on all channels.
-    pref("datareporting.healthreport.uploadEnabled", true);
+//    pref("datareporting.healthreport.uploadEnabled", true);
+    pref("datareporting.healthreport.uploadEnabled", false);
   #endif
 #endif
 
Index: firefox-102.0/browser/components/preferences/privacy.js
===================================================================
--- firefox-102.0.orig/browser/components/preferences/privacy.js
+++ firefox-102.0/browser/components/preferences/privacy.js
@@ -630,13 +630,13 @@ var gPrivacyPane = {
 
     this.initListenersForExtensionControllingPasswordManager();
     // set up the breach alerts Learn More link with the correct URL
-    const breachAlertsLearnMoreLink = document.getElementById(
+/*    const breachAlertsLearnMoreLink = document.getElementById(
       "breachAlertsLearnMoreLink"
     );
     const breachAlertsLearnMoreUrl =
       Services.urlFormatter.formatURLPref("app.support.baseURL") +
       "lockwise-alerts";
-    breachAlertsLearnMoreLink.setAttribute("href", breachAlertsLearnMoreUrl);
+    breachAlertsLearnMoreLink.setAttribute("href", breachAlertsLearnMoreUrl);*/
 
     this._initSafeBrowsing();
 
@@ -762,6 +762,8 @@ var gPrivacyPane = {
 
     this.initDataCollection();
 
+/* MagIns - To prevent users from reenabling Telemetry uploads, we comment out the code
+            initiating those sections of the Preferences page.
     if (AppConstants.MOZ_DATA_REPORTING) {
       if (AppConstants.MOZ_CRASHREPORTER) {
         this.initSubmitCrashes();
@@ -781,7 +783,7 @@ var gPrivacyPane = {
         this.initOptOutStudyCheckbox();
       }
       this.initAddonRecommendationsCheckbox();
-    }
+    }*/
 
     let signonBundle = document.getElementById("signonBundle");
     let pkiBundle = document.getElementById("pkiBundle");
@@ -2627,6 +2629,8 @@ var gPrivacyPane = {
   },
 
   initDataCollection() {
+/* MagIns - To prevent users from reenabling Telemetry uploads, we comment out the code
+            initiating those sections of the Preferences page.
     if (
       !AppConstants.MOZ_DATA_REPORTING &&
       !Services.prefs.getBoolPref(
@@ -2644,7 +2648,7 @@ var gPrivacyPane = {
       "toolkit.datacollection.infoURL",
       "dataCollectionPrivacyNotice"
     );
-    this.initPrivacySegmentation();
+    this.initPrivacySegmentation();*/
   },
 
   initSubmitCrashes() {
Index: firefox-102.0/toolkit/components/normandy/lib/ClientEnvironment.jsm
===================================================================
--- firefox-102.0.orig/toolkit/components/normandy/lib/ClientEnvironment.jsm
+++ firefox-102.0/toolkit/components/normandy/lib/ClientEnvironment.jsm
@@ -53,7 +53,10 @@ class ClientEnvironment extends ClientEn
    */
   static async getClientClassification() {
     if (!_classifyRequest) {
-      _classifyRequest = NormandyApi.classifyClient();
+/* MagIns - classifyClient() sends a ping to Mozilla, returning with the user's country
+            and the timestamp of the request. There is no option to disable this through
+            preferences.
+      _classifyRequest = NormandyApi.classifyClient();*/
     }
     return _classifyRequest;
   }
Index: firefox-102.0/services/fxaccounts/FxAccountsClient.jsm
===================================================================
--- firefox-102.0.orig/services/fxaccounts/FxAccountsClient.jsm
+++ firefox-102.0/services/fxaccounts/FxAccountsClient.jsm
@@ -543,7 +543,12 @@ FxAccountsClient.prototype = {
    */
   async registerDevice(sessionTokenHex, name, type, options = {}) {
     let path = "/account/device";
-
+/* MagIns - By default, Firefox reads the name of your device and sends it to their server
+            when a device signs on to Sync for the first time. By setting the name to an
+            empty string here, users can still name devices if they so choose but we do not
+            collect this information by default. This feature will allow us to do alerts for
+            Sync changes in the future.*/
+    name = "";
     let creds = await deriveHawkCredentials(sessionTokenHex, "sessionToken");
     let body = { name, type };
 
Index: firefox-102.0/browser/components/preferences/privacy.inc.xhtml
===================================================================
--- firefox-102.0.orig/browser/components/preferences/privacy.inc.xhtml
+++ firefox-102.0/browser/components/preferences/privacy.inc.xhtml
@@ -931,6 +931,8 @@
 </groupbox>
 
 <!-- Firefox Data Collection and Use -->
+<!-- MagIns - We have all data reporting disabled through preferences, so we remove the HTML elements from
+              preferences so that typical users easily enable data reporting accidentally.
 <hbox id="dataCollectionCategory"
       class="subcategory"
       hidden="true"
@@ -1015,21 +1017,21 @@
   </vbox>
 #endif
   <vbox id="privacySegmentationSection" data-subcategory="privacy-segmentation" hidden="true">
-    <hbox align="center">
+    <hbox align="center"> -->
       <!-- TODO: Bug 1752172, provisional copy  -->
-      <checkbox id="privacySegmentationCheck"
+<!--      <checkbox id="privacySegmentationCheck"
                 preference="browser.privacySegmentation.enabled"
                 class="tail-with-learn-more"
                 label="Always ask before enabling new features that use my data"
                 accesskey="A">
-      </checkbox>
+      </checkbox>-->
       <!-- TODO: Bug 1752172, provisional copy  -->
-      <label id="privacy-segmentation-learn-more-link"
+<!--      <label id="privacy-segmentation-learn-more-link"
              class="learnMore"
              is="text-link">Learn more</label>
     </hbox>
   </vbox>
-</groupbox>
+</groupbox>-->
 
 <hbox id="securityCategory"
       class="subcategory"
